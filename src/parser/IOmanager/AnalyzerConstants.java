/* Generated By:JavaCC: Do not edit this line. AnalyzerConstants.java */
package parser.IOmanager;

/**
 * Token literal values and constants. Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalyzerConstants
{

	/** End of File. */
	int EOF = 0;
	/** RegularExpression Id. */
	int SYMBOLS = 1;
	/** RegularExpression Id. */
	int AXIOM = 2;
	/** RegularExpression Id. */
	int LONGAXIOM = 3;
	/** RegularExpression Id. */
	int RULES = 4;
	/** RegularExpression Id. */
	int ANGLE = 5;
	/** RegularExpression Id. */
	int FORWARD = 6;
	/** RegularExpression Id. */
	int TURNLEFT = 7;
	/** RegularExpression Id. */
	int TURNRIGHT = 8;
	/** RegularExpression Id. */
	int TURNUP = 9;
	/** RegularExpression Id. */
	int TURNDOWN = 10;
	/** RegularExpression Id. */
	int ROLLLEFT = 11;
	/** RegularExpression Id. */
	int ROLLRIGHT = 12;
	/** RegularExpression Id. */
	int ABOUTTURN = 13;
	/** RegularExpression Id. */
	int SAVEPOSITION = 14;
	/** RegularExpression Id. */
	int RESTOREPOSITION = 15;
	/** RegularExpression Id. */
	int DOL = 16;
	/** RegularExpression Id. */
	int SOL = 17;
	/** RegularExpression Id. */
	int DIL = 18;
	/** RegularExpression Id. */
	int SIL = 19;
	/** RegularExpression Id. */
	int ENDL = 25;
	/** RegularExpression Id. */
	int DOT = 26;
	/** RegularExpression Id. */
	int COLON = 27;
	/** RegularExpression Id. */
	int ARROW = 28;
	/** RegularExpression Id. */
	int OPEN_BRA = 29;
	/** RegularExpression Id. */
	int CLOSE_BRA = 30;
	/** RegularExpression Id. */
	int PREVIOUS = 31;
	/** RegularExpression Id. */
	int FOLLOW = 32;
	/** RegularExpression Id. */
	int NULL_CHAR = 33;
	/** RegularExpression Id. */
	int DIGITS_ONE_OR_MORE = 34;
	/** RegularExpression Id. */
	int DIGITS_ZERO_OR_MORE = 35;
	/** RegularExpression Id. */
	int INTEGER = 36;
	/** RegularExpression Id. */
	int FLOAT = 37;
	/** RegularExpression Id. */
	int SYMBOL = 38;
	/** RegularExpression Id. */
	int SEQUENCE = 39;

	/** Lexical state. */
	int DEFAULT = 0;
	/** Lexical state. */
	int IN_COMMENT = 1;

	/** Literal token values. */
	String[] tokenImage = { "<EOF>", "\"SYMBOLS\"", "\"AXIOM\"", "\"PHRASE\"", "\"RULES\"", "\"ANGLE\"", "\"FORWARD\"", "\"TURNLEFT\"",
			"\"TURNRIGHT\"", "\"TURNUP\"", "\"TURNDOWN\"", "\"ROLLLEFT\"", "\"ROLLRIGHT\"", "\"ABOUTTURN\"", "\"SAVEPOSITION\"",
			"\"RESTOREPOSITION\"", "\"DOL\"", "\"SOL\"", "\"DIL\"", "\"SIL\"", "\"#\"", "<token of kind 21>", "\"#\"", "\" \"", "\"\\t\"",
			"<ENDL>", "\".\"", "\":\"", "\"->\"", "\"{\"", "\"}\"", "\"<\"", "\">\"", "\"\\u03b5\"", "<DIGITS_ONE_OR_MORE>",
			"<DIGITS_ZERO_OR_MORE>", "<INTEGER>", "<FLOAT>", "<SYMBOL>", "<SEQUENCE>", };

}
